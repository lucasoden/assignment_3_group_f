name: release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build image
        run: |
          REPO_LC="${GITHUB_REPOSITORY,,}"            # force lowercase
          TAG="${GITHUB_REF_NAME}"
          IMAGE="ghcr.io/${REPO_LC}:${TAG}"
          echo "IMAGE=$IMAGE" >> "$GITHUB_ENV"
          docker build -t "$IMAGE" .

      - name: Smoke test container
        run: |
          docker run -d -p 8000:8000 --name api "${IMAGE}"
          sleep 3
          # If health endpoint returns non-200 or non-JSON, this will fail the step
          curl -sSf http://localhost:8000/health | jq .
          docker logs api
          docker rm -f api

      # If your build produces artifacts/metrics.json, keep this step.
      # Otherwise, this will gracefully fall back to "No metrics found."
      - name: Read metrics
        id: metrics
        shell: bash
        run: |
          if [[ -f artifacts/metrics.json ]]; then
            {
              echo 'metrics_body<<EOF'
              cat artifacts/metrics.json
              echo EOF
            } >> "$GITHUB_OUTPUT"
          else
            echo 'metrics_body<<EOF' >> "$GITHUB_OUTPUT"
            echo 'No metrics found.' >> "$GITHUB_OUTPUT"
            echo 'EOF' >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: docker push "${IMAGE}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}
            **Metrics:**
            ```
            ${{ steps.metrics.outputs.metrics_body }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
